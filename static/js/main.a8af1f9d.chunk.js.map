{"version":3,"sources":["api.ts","TodoContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","StateOption","TodoContext","React","createContext","TodoProvider","children","useState","todos","setTodos","loading","setLoading","modalLoading","setModalLoading","modalWindow","setModalWindow","selectedTodo","setSelectedTodo","query","setQuery","all","filterOption","setFilterOption","useEffect","response","finally","handleSelectedTodo","todo","userId","user","closeModal","filterTodos","array","filterQuery","selectedFilterOption","filteredArray","normalizedQuery","toLowerCase","filter","title","includes","active","completed","contextValues","useMemo","Provider","value","TodoList","memo","useContext","visibleTodos","className","map","id","classNames","onClick","type","TodoFilter","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8af1f9d.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\n\ninterface ContextValues {\n  todos: Todo[],\n  loading: boolean,\n  modalWindow: boolean,\n  selectedTodo: Todo | null,\n  modalLoading: boolean,\n  query: string,\n  filterOption: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  setFilterOption: React.Dispatch<React.SetStateAction<StateOption>>,\n  handleSelectedTodo: (todo: Todo) => void,\n  closeModal: () => void,\n  filterTodos: (\n    array: Todo[], filterQuery:string, selectedFilterOption: string\n  ) => Todo[],\n}\n\nexport enum StateOption {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const TodoContext = React.createContext({} as ContextValues);\n\nexport const TodoProvider: React.FC = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modalWindow, setModalWindow] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterOption, setFilterOption]\n  = useState<StateOption>(StateOption.all);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(response => {\n        setTodos(response);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleSelectedTodo = (todo: Todo) => {\n    setModalWindow(true);\n    setModalLoading(true);\n    getUser(todo.userId)\n      .then(response => setSelectedTodo({\n        ...todo,\n        user: response,\n      }))\n      .finally(() => setModalLoading(false));\n  };\n\n  const closeModal = () => {\n    setModalWindow(false);\n    setSelectedTodo(null);\n  };\n\n  const filterTodos = (\n    array: Todo[], filterQuery: string, selectedFilterOption: string,\n  ) => {\n    let filteredArray = [...array];\n    const normalizedQuery = filterQuery.toLowerCase();\n\n    if (normalizedQuery) {\n      filteredArray = filteredArray.filter(todo => todo.title\n        .toLowerCase().includes(normalizedQuery));\n    }\n\n    if (selectedFilterOption) {\n      filteredArray = filteredArray.filter(todo => {\n        switch (selectedFilterOption) {\n          case StateOption.active:\n            return !todo.completed;\n          case StateOption.completed:\n            return todo.completed;\n          default:\n            return todo;\n        }\n      });\n    }\n\n    return filteredArray;\n  };\n\n  const contextValues = useMemo(() => ({\n    todos,\n    loading,\n    modalWindow,\n    selectedTodo,\n    modalLoading,\n    handleSelectedTodo,\n    closeModal,\n    filterTodos,\n    query,\n    setQuery,\n    filterOption,\n    setFilterOption,\n  }), [\n    todos,\n    loading,\n    selectedTodo,\n    modalLoading,\n    modalWindow,\n    query,\n    filterOption,\n  ]);\n\n  return (\n    <TodoContext.Provider value={contextValues}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { TodoContext } from '../../TodoContext';\n\nexport const TodoList: React.FC = React.memo(() => {\n  const {\n    todos, selectedTodo, handleSelectedTodo, filterTodos, query, filterOption,\n  } = useContext(TodoContext);\n\n  const visibleTodos = useMemo(() => filterTodos(todos, query, filterOption),\n    [todos, query, filterOption]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => handleSelectedTodo(todo)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import {\n  ChangeEvent, useContext,\n} from 'react';\nimport { StateOption, TodoContext } from '../../TodoContext';\n\nexport const TodoFilter = () => {\n  const {\n    query,\n    setQuery,\n    filterOption,\n    setFilterOption,\n  } = useContext(TodoContext);\n\n  const handleSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case (StateOption.active):\n        setFilterOption(StateOption.active);\n        break;\n      case (StateOption.completed):\n        setFilterOption(StateOption.completed);\n        break;\n      default:\n        setFilterOption(StateOption.all);\n        break;\n    }\n  };\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n            value={filterOption}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, modalLoading, closeModal } = useContext(TodoContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${selectedTodo?.user?.email}`}>\n                {selectedTodo?.user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './TodoContext';\n\nexport const App: React.FC = () => {\n  const { loading, modalWindow } = useContext(TodoContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalWindow && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}